name: Release

on: 
  workflow_run:
    workflows: ["Build"]
    branch: [main]
    types:
      - completed

jobs:        
  #Action only on release (tag starting with v)
  release:
    if: startsWith(github.ref, 'refs/tags/v') 
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          branch: main       
      - name: Debug Outputs
        env: 
          OUTPUT: ${{ needs.build.outputs}}
        run: echo "$OUTPUT"
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }} 
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: true
          prerelease: false  
      - name: Upload Release Assets
        id: upload-release-assets 
        uses: nbtx/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          targets: ./*.[exe|zip]
#          asset_path: ./my-artifact.zip
#          asset_name: my-artifact.zip
#          asset_content_type: application/zip                 
#      - name: Publish
#        run: |
#          GITHUB_TOKEN=${{ secrets.github_token }} npm run publish