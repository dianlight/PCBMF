name: Build

on: 
 release:
  types: ['created']
 pull_request:
 push:
  tags-ignore:
    - 'v*'
  paths-ignore:
    - '.github/**'
    - "*.md"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # macos-11.0 ?
        os: [macos-latest , ubuntu-latest, windows-latest]
        arch: [x64, arm64]
#        arch: [ia32, armv7l, x64, arm64, mips64el]
        include:
        - os: ubuntu-latest
          arch: armv7l
          experimental: true
      fail-fast: false


    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build Electron app
        env:
         TARGET_ARCH: ${{ matrix.arch }}
        run: |
          npm install
          npm run make -- --arch ${{ matrix.arch }}
      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@v0.0.12        
      #- run: |
      #    npx renamer --find ".exe" --replace "-${{ matrix.arch }}.exe" "out/**"  
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: AButler/upload-release-assets@v2.0
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          files: "out/make/**/*.exe;out/make/**/*.rpm;out/make/**/*.deb;out/make/**/*.app;out/make/**/*.dmg;out/make/**/*.zip"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.get_version.outputs.VERSION }}
      - uses: actions/upload-artifact@v2
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        with:
          name: ${{ steps.projectinfo.outputs.name }}-${{ steps.projectinfo.outputs.version }}-${{ runner.os }}-${{ matrix.arch }}
          path: |
             out/make/**/*.exe
             out/make/**/*.rpm
             out/make/**/*.deb
             out/make/**/*.app
             out/make/**/*.dmg
             out/make/**/*.zip
#            out/make/**/${{ matrix.arch }}/*
                                  
